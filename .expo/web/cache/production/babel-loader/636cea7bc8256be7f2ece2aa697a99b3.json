{"ast":null,"code":"import{canUseDOM}from'fbjs/lib/ExecutionEnvironment';function isScreenReaderEnabled(){return new Promise(function(resolve,reject){resolve(true);});}var prefersReducedMotionMedia=canUseDOM?window.matchMedia('(prefers-reduced-motion: reduce)'):null;function isReduceMotionEnabled(){return new Promise(function(resolve,reject){resolve(prefersReducedMotionMedia?prefersReducedMotionMedia.matches:true);});}var handlers={};var AccessibilityInfo={isScreenReaderEnabled:isScreenReaderEnabled,isReduceMotionEnabled:isReduceMotionEnabled,fetch:isScreenReaderEnabled,addEventListener:function addEventListener(eventName,handler){if(eventName==='reduceMotionChanged'){if(!prefersReducedMotionMedia){return;}var listener=function listener(event){handler(event.matches);};prefersReducedMotionMedia.addEventListener('change',listener);handlers[handler]=listener;}return{remove:function remove(){return AccessibilityInfo.removeEventListener(eventName,handler);}};},setAccessibilityFocus:function setAccessibilityFocus(reactTag){},announceForAccessibility:function announceForAccessibility(announcement){},removeEventListener:function removeEventListener(eventName,handler){if(eventName==='reduceMotionChanged'){var listener=handlers[handler];if(!listener||!prefersReducedMotionMedia){return;}prefersReducedMotionMedia.removeEventListener('change',listener);}return;}};export default AccessibilityInfo;","map":{"version":3,"sources":["/Users/admin/Documents/GitHub/rasap-pack-rn/node_modules/react-native-web/dist/exports/AccessibilityInfo/index.js"],"names":["canUseDOM","isScreenReaderEnabled","Promise","resolve","reject","prefersReducedMotionMedia","window","matchMedia","isReduceMotionEnabled","matches","handlers","AccessibilityInfo","fetch","addEventListener","eventName","handler","listener","event","remove","removeEventListener","setAccessibilityFocus","reactTag","announceForAccessibility","announcement"],"mappings":"AAQA,OAASA,SAAT,KAA0B,+BAA1B,CAEA,QAASC,CAAAA,qBAAT,EAAiC,CAC/B,MAAO,IAAIC,CAAAA,OAAJ,CAAY,SAAUC,OAAV,CAAmBC,MAAnB,CAA2B,CAC5CD,OAAO,CAAC,IAAD,CAAP,CACD,CAFM,CAAP,CAGD,CAED,GAAIE,CAAAA,yBAAyB,CAAGL,SAAS,CAAGM,MAAM,CAACC,UAAP,CAAkB,kCAAlB,CAAH,CAA2D,IAApG,CAEA,QAASC,CAAAA,qBAAT,EAAiC,CAC/B,MAAO,IAAIN,CAAAA,OAAJ,CAAY,SAAUC,OAAV,CAAmBC,MAAnB,CAA2B,CAC5CD,OAAO,CAACE,yBAAyB,CAAGA,yBAAyB,CAACI,OAA7B,CAAuC,IAAjE,CAAP,CACD,CAFM,CAAP,CAGD,CAED,GAAIC,CAAAA,QAAQ,CAAG,EAAf,CACA,GAAIC,CAAAA,iBAAiB,CAAG,CAOtBV,qBAAqB,CAAEA,qBAPD,CAetBO,qBAAqB,CAAEA,qBAfD,CAoBtBI,KAAK,CAAEX,qBApBe,CAyBtBY,gBAAgB,CAAE,QAASA,CAAAA,gBAAT,CAA0BC,SAA1B,CAAqCC,OAArC,CAA8C,CAC9D,GAAID,SAAS,GAAK,qBAAlB,CAAyC,CACvC,GAAI,CAACT,yBAAL,CAAgC,CAC9B,OACD,CAED,GAAIW,CAAAA,QAAQ,CAAG,QAASA,CAAAA,QAAT,CAAkBC,KAAlB,CAAyB,CACtCF,OAAO,CAACE,KAAK,CAACR,OAAP,CAAP,CACD,CAFD,CAIAJ,yBAAyB,CAACQ,gBAA1B,CAA2C,QAA3C,CAAqDG,QAArD,EACAN,QAAQ,CAACK,OAAD,CAAR,CAAoBC,QAApB,CACD,CAED,MAAO,CACLE,MAAM,CAAE,QAASA,CAAAA,MAAT,EAAkB,CACxB,MAAOP,CAAAA,iBAAiB,CAACQ,mBAAlB,CAAsCL,SAAtC,CAAiDC,OAAjD,CAAP,CACD,CAHI,CAAP,CAKD,CA5CqB,CAiDtBK,qBAAqB,CAAE,QAASA,CAAAA,qBAAT,CAA+BC,QAA/B,CAAyC,CAAE,CAjD5C,CAsDtBC,wBAAwB,CAAE,QAASA,CAAAA,wBAAT,CAAkCC,YAAlC,CAAgD,CAAE,CAtDtD,CA2DtBJ,mBAAmB,CAAE,QAASA,CAAAA,mBAAT,CAA6BL,SAA7B,CAAwCC,OAAxC,CAAiD,CACpE,GAAID,SAAS,GAAK,qBAAlB,CAAyC,CACvC,GAAIE,CAAAA,QAAQ,CAAGN,QAAQ,CAACK,OAAD,CAAvB,CAEA,GAAI,CAACC,QAAD,EAAa,CAACX,yBAAlB,CAA6C,CAC3C,OACD,CAEDA,yBAAyB,CAACc,mBAA1B,CAA8C,QAA9C,CAAwDH,QAAxD,EACD,CAED,OACD,CAvEqB,CAAxB,CAyEA,cAAeL,CAAAA,iBAAf","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nimport { canUseDOM } from 'fbjs/lib/ExecutionEnvironment';\n\nfunction isScreenReaderEnabled() {\n  return new Promise(function (resolve, reject) {\n    resolve(true);\n  });\n}\n\nvar prefersReducedMotionMedia = canUseDOM ? window.matchMedia('(prefers-reduced-motion: reduce)') : null;\n\nfunction isReduceMotionEnabled() {\n  return new Promise(function (resolve, reject) {\n    resolve(prefersReducedMotionMedia ? prefersReducedMotionMedia.matches : true);\n  });\n}\n\nvar handlers = {};\nvar AccessibilityInfo = {\n  /**\n   * Query whether a screen reader is currently enabled.\n   *\n   * Returns a promise which resolves to a boolean.\n   * The result is `true` when a screen reader is enabled and `false` otherwise.\n   */\n  isScreenReaderEnabled: isScreenReaderEnabled,\n\n  /**\n   * Query whether the user prefers reduced motion.\n   *\n   * Returns a promise which resolves to a boolean.\n   * The result is `true` when a screen reader is enabled and `false` otherwise.\n   */\n  isReduceMotionEnabled: isReduceMotionEnabled,\n\n  /**\n   * Deprecated\n   */\n  fetch: isScreenReaderEnabled,\n\n  /**\n   * Add an event handler. Supported events: reduceMotionChanged\n   */\n  addEventListener: function addEventListener(eventName, handler) {\n    if (eventName === 'reduceMotionChanged') {\n      if (!prefersReducedMotionMedia) {\n        return;\n      }\n\n      var listener = function listener(event) {\n        handler(event.matches);\n      };\n\n      prefersReducedMotionMedia.addEventListener('change', listener);\n      handlers[handler] = listener;\n    }\n\n    return {\n      remove: function remove() {\n        return AccessibilityInfo.removeEventListener(eventName, handler);\n      }\n    };\n  },\n\n  /**\n   * Set accessibility focus to a react component.\n   */\n  setAccessibilityFocus: function setAccessibilityFocus(reactTag) {},\n\n  /**\n   * Post a string to be announced by the screen reader.\n   */\n  announceForAccessibility: function announceForAccessibility(announcement) {},\n\n  /**\n   * Remove an event handler.\n   */\n  removeEventListener: function removeEventListener(eventName, handler) {\n    if (eventName === 'reduceMotionChanged') {\n      var listener = handlers[handler];\n\n      if (!listener || !prefersReducedMotionMedia) {\n        return;\n      }\n\n      prefersReducedMotionMedia.removeEventListener('change', listener);\n    }\n\n    return;\n  }\n};\nexport default AccessibilityInfo;"]},"metadata":{},"sourceType":"module"}