{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";var TRANSFORM_STYLE_PROPERTIES=['perspective','rotate','rotateX','rotateY','rotateZ','scale','scaleX','scaleY','skewX','skewY','translateX','translateY'];export default function wrapStyleTransforms(style){var wrapped={};Object.keys(style).forEach(function(key){if(TRANSFORM_STYLE_PROPERTIES.indexOf(key)!==-1){if(!wrapped.transform){wrapped.transform=[];}wrapped.transform.push(_defineProperty({},key,style[key]));}else{wrapped[key]=style[key];}});return wrapped;}","map":{"version":3,"sources":["/Users/admin/Documents/GitHub/rasap-pack-rn/node_modules/react-native-animatable/wrapStyleTransforms.js"],"names":["TRANSFORM_STYLE_PROPERTIES","wrapStyleTransforms","style","wrapped","Object","keys","forEach","key","indexOf","transform","push"],"mappings":"mEACA,GAAMA,CAAAA,0BAA0B,CAAG,CACjC,aADiC,CAEjC,QAFiC,CAGjC,SAHiC,CAIjC,SAJiC,CAKjC,SALiC,CAMjC,OANiC,CAOjC,QAPiC,CAQjC,QARiC,CASjC,OATiC,CAUjC,OAViC,CAWjC,YAXiC,CAYjC,YAZiC,CAAnC,CAgBA,cAAe,SAASC,CAAAA,mBAAT,CAA6BC,KAA7B,CAAoC,CACjD,GAAMC,CAAAA,OAAO,CAAG,EAAhB,CACAC,MAAM,CAACC,IAAP,CAAYH,KAAZ,EAAmBI,OAAnB,CAA2B,SAAAC,GAAG,CAAI,CAChC,GAAIP,0BAA0B,CAACQ,OAA3B,CAAmCD,GAAnC,IAA4C,CAAC,CAAjD,CAAoD,CAClD,GAAI,CAACJ,OAAO,CAACM,SAAb,CAAwB,CACtBN,OAAO,CAACM,SAAR,CAAoB,EAApB,CACD,CACDN,OAAO,CAACM,SAAR,CAAkBC,IAAlB,oBACGH,GADH,CACSL,KAAK,CAACK,GAAD,CADd,GAGD,CAPD,IAOO,CACLJ,OAAO,CAACI,GAAD,CAAP,CAAeL,KAAK,CAACK,GAAD,CAApB,CACD,CACF,CAXD,EAYA,MAAOJ,CAAAA,OAAP,CACD","sourcesContent":["// These styles need to be nested in a transform array\nconst TRANSFORM_STYLE_PROPERTIES = [\n  'perspective',\n  'rotate',\n  'rotateX',\n  'rotateY',\n  'rotateZ',\n  'scale',\n  'scaleX',\n  'scaleY',\n  'skewX',\n  'skewY',\n  'translateX',\n  'translateY',\n];\n\n// Transforms { translateX: 1 } to { transform: [{ translateX: 1 }]}\nexport default function wrapStyleTransforms(style) {\n  const wrapped = {};\n  Object.keys(style).forEach(key => {\n    if (TRANSFORM_STYLE_PROPERTIES.indexOf(key) !== -1) {\n      if (!wrapped.transform) {\n        wrapped.transform = [];\n      }\n      wrapped.transform.push({\n        [key]: style[key],\n      });\n    } else {\n      wrapped[key] = style[key];\n    }\n  });\n  return wrapped;\n}\n"]},"metadata":{},"sourceType":"module"}